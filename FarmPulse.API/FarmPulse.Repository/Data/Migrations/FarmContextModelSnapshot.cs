// <auto-generated />
using System;
using FarmPulse.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmPulse.Repository.Data.Migrations
{
    [DbContext(typeof(FarmContext))]
    partial class FarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmPulse.Core.Models.Chicken", b =>
                {
                    b.Property<int>("ChickenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChickenId"));

                    b.Property<string>("ActivityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurrentWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("RFID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChickenId");

                    b.ToTable("Chicken");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChickenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChickenId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("MortalityRate")
                        .HasColumnType("float");

                    b.Property<double>("SurvivalRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Statistic");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Weight", b =>
                {
                    b.Property<int>("WeightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeightID"));

                    b.Property<int>("ChickenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("EntryWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExitWeight")
                        .HasColumnType("float");

                    b.HasKey("WeightID");

                    b.HasIndex("ChickenId");

                    b.ToTable("Weight");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Notification", b =>
                {
                    b.HasOne("FarmPulse.Core.Models.Chicken", "Chicken")
                        .WithMany("Notifications")
                        .HasForeignKey("ChickenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chicken");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Weight", b =>
                {
                    b.HasOne("FarmPulse.Core.Models.Chicken", "Chicken")
                        .WithMany("Weights")
                        .HasForeignKey("ChickenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chicken");
                });

            modelBuilder.Entity("FarmPulse.Core.Models.Chicken", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Weights");
                });
#pragma warning restore 612, 618
        }
    }
}
